{"version":3,"sources":["components/recipe-structure/Recipe.js","components/search-form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","id","title","calories","img","ingredients","url","className","toFixed","src","alt","map","ingredient","href","rel","target","Form","setQuery","useState","search","setSearch","onSubmit","e","preventDefault","type","value","onChange","App","recipes","setRecipes","query","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","recipeItem","recipe","label","image","ingredientLines","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAwBeA,EArBA,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,IACvD,OACE,qBAAKC,UAAU,mBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,4BAAIN,IACJ,6BAAKC,IACL,6BAAKC,EAASK,QAAQ,KACtB,qBAAKC,IAAKL,EAAKM,IAAI,KACnB,6BACGL,EAAYM,KAAI,SAACC,GAAD,OACf,6BAAKA,SAGT,mBAAGC,KAAMP,EAAKQ,IAAI,aAAaC,OAAO,SAAtC,kCCcOC,G,MA3BF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACDC,mBAAS,IADR,mBACtBC,EADsB,KACdC,EADc,KAe7B,OACE,8BACE,uBAAMb,UAAU,cAAcc,SARhB,SAACC,GACjBA,EAAEC,iBACFN,EAASE,GACTC,EAAU,KAKR,UACE,uBAAOb,UAAU,aAAaiB,KAAK,OAAOC,MAAON,EAAQO,SAd1C,SAACJ,GACpBF,EAAUE,EAAEP,OAAOU,UAcf,wBAAQlB,UAAU,cAAciB,KAAK,SAArC,2BCuBOG,EAzCH,WAEV,IAFgB,EAMcT,mBAAS,IANvB,mBAMTU,EANS,KAMAC,EANA,OAOUX,mBAAS,IAPnB,mBAOTY,EAPS,KAOFb,EAPE,KAUhBc,qBAAU,WACRC,MACC,CAACF,IAGJ,IAAME,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCJ,EAApC,mBAdf,WAce,oBAbb,qCAYE,cACXK,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBR,EAAWQ,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAOhB,OACE,gCAEE,cAAC,EAAD,CAAMrB,SAAUA,IAGfW,EAAQjB,KAAI,SAAC8B,GAAD,OACX,cAAC,EAAD,CAEEvC,MAAOuC,EAAWC,OAAOC,MACzBxC,SAAUsC,EAAWC,OAAOvC,SAC5BC,IAAKqC,EAAWC,OAAOE,MACvBvC,YAAaoC,EAAWC,OAAOG,gBAC/BvC,IAAKmC,EAAWC,OAAOpC,KALlBmC,EAAWC,OAAOC,cCtBlBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e2c4c39.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./recipe.css\";\r\n\r\nconst Recipe = ({ id, title, calories, img, ingredients, url }) => {\r\n  return (\r\n    <div className=\"recipe-container\">\r\n      <div className=\"recipe-box\">\r\n        <p>{id}</p>\r\n        <h1>{title}</h1>\r\n        <h4>{calories.toFixed(2)}</h4>\r\n        <img src={img} alt=\"\" />\r\n        <ul>\r\n          {ingredients.map((ingredient) => (\r\n            <li>{ingredient}</li>\r\n          ))}\r\n        </ul>\r\n        <a href={url} rel=\"noreferrer\" target=\"_blank\">\r\n          Link to Recipe\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useState } from \"react\";\r\nimport \"./form.css\";\r\n\r\nconst Form = ({ setQuery }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  // setting-up search query in input bar\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  // appending search to get data from api\r\n  const getSearch = (e) => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"search-form\" onSubmit={getSearch}>\r\n        <input className=\"form-input\" type=\"text\" value={search} onChange={updateSearch} />\r\n        <button className=\"form-submit\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Recipe from \"./components/recipe-structure/Recipe\";\r\nimport Form from \"./components/search-form/Form\";\r\n\r\nconst App = () => {\r\n  // Edamam App id and Key\r\n  const APP_ID = \"5b361f00\";\r\n  const APP_KEYS = \"a068c5740b7e80ea46d2eff807815442\";\r\n\r\n  // setting state and search variables using useState\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  // Using useEffect for loading and getting data\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  // getting response from api\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEYS}`);\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n    console.log(data.hits);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* creating input and submit component */}\r\n      <Form setQuery={setQuery} />\r\n\r\n      {/* mapping data to pass down to Recipe component */}\r\n      {recipes.map((recipeItem) => (\r\n        <Recipe\r\n          key={recipeItem.recipe.label}\r\n          title={recipeItem.recipe.label}\r\n          calories={recipeItem.recipe.calories}\r\n          img={recipeItem.recipe.image}\r\n          ingredients={recipeItem.recipe.ingredientLines}\r\n          url={recipeItem.recipe.url}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}